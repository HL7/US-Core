{
	"id": "77267737-a566-4117-8122-5cfaf0854c43",
	"name": "Patient",
	"allTests": [],
	"timestamp": "2019-06-19T15:20:24.589Z",
	"collection_id": "af1b350c-31e2-4f59-baf6-abf872f5b807",
	"folder_id": "00b908ce-58b3-4d98-ab60-bfa55c05af9a",
	"target_type": "folder",
	"environment_id": "225804e0-0e2f-47eb-b7eb-82f18cb885ac",
	"data": [],
	"delay": 0,
	"count": 1,
	"collection": {
		"id": "af1b350c-31e2-4f59-baf6-abf872f5b807",
		"name": "US_Core_R4",
		"description": "US Core R4 Examples",
		"auth": null,
		"events": null,
		"variables": [],
		"order": [],
		"folders_order": [
			"00b908ce-58b3-4d98-ab60-bfa55c05af9a",
			"864e1f20-d97c-432f-99f7-08df0fba9677",
			"08e1872f-93d2-4115-ba96-8dbfffdf01ed",
			"65480b3c-13c0-427a-9c41-4eba3e238e1e",
			"13c53e28-3c6c-4537-a6f1-295ea7e197a7"
		],
		"owner": "1447203",
		"favorite": true,
		"isFavorite": true
	},
	"folder": {
		"id": "00b908ce-58b3-4d98-ab60-bfa55c05af9a",
		"name": "Patient",
		"description": "",
		"auth": null,
		"events": null,
		"collection": "af1b350c-31e2-4f59-baf6-abf872f5b807",
		"folder": null,
		"order": [
			"871c82b0-2f37-4880-bcff-50546428574f",
			"7cdfc42b-e11b-42d2-879d-3cbe65a17bf0",
			"e920a51b-3016-416b-a0ed-e454659edb27",
			"2c074e34-8735-4ad6-823e-470ea9acea67",
			"213a06b7-e543-401f-816e-fec4ca99097b",
			"ec9dc38c-c35e-4b0c-9b40-4b526612c7cc",
			"093ce5aa-96c9-4805-a3a5-d45e063b758f",
			"e8c60337-9013-431d-ac35-fcfcc8f6dab3"
		],
		"folders_order": [],
		"type": "folder",
		"depth": 1
	},
	"environment": null,
	"globals": [
		{
			"key": "epic_argo_r4",
			"value": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4/",
			"enabled": false
		},
		{
			"key": "bin_url",
			"value": "http://test.fhir.org/r3/Binary/omh-stepcount-example",
			"enabled": true
		},
		{
			"key": "commonTests",
			"value": "() => {\n// check if get a 200 back for successful search\npm.test(\"Description:\" + request.description, function () {\n    pm.response;\n});\n//console.log(pm.request.url.query.all())\nvar query = {};\nvar good_to_go = true;\npm.request.url.query.all().forEach((param) => { \n    //console.log(param.key + ', param.value = ' + param.value);\n    if (param.value == null || param.value.startsWith('{')) {\n              pm.test(\"no \" +  param.key + \" value = \" + param.value, function () {\n              pm.expect.fail();\n              });\n             good_to_go = false; \n        }\n    });\n\n\nif (good_to_go){\nvar resource_type = pm.environment.get(\"resource_type\");\npm.test(\"response is ok\" + resource_type, function () {\n    pm.response.to.have.status(200);\n});\nif (pm.response.code === 200){\n    try{\n        var b = pm.response.json();\n        var has_r =false ;\n        for (var i in b.entry) {\n            r = b.entry[i].resource;\n            if  (r.resourceType == resource_type )\n            {\n                pm.test('Resource Type= ' + r.resourceType + \" id = \" + r.id, function () {});\n                has_r = true ;\n            }\n            }\n            if  (has_r === false){\n            pm.test(\"no \" + resource_type + \" in bundle\", function () {\n              pm.expect.fail();\n              });\n            }\n        }\n        \n        catch(e){\n            console.log(e);\n        }\n    }\n}\n}",
			"enabled": true
		},
		{
			"key": "reset_env",
			"value": "() => {\n// reset all environmental variable for Encounter\nuri = pm.environment.get(\"uri\");\npatient = pm.environment.get(\"patient\");\npm.environment.clear();\npm.environment.set(\"uri\", uri);\npm.environment.set(\"patient\", patient);\n}",
			"enabled": true
		},
		{
			"key": "base_url",
			"value": "http://hapi.fhir.org/baseR4",
			"enabled": true
		}
	],
	"results": [
		{
			"name": "{{uri}}Patient/{{patient}}",
			"id": "871c82b0-2f37-4880-bcff-50546428574f",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4/Patient/eroCd17NbCffM3E3WXi7eOQ3",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Description:SHALL support fetching a Patient using the _id search parameter:\n\nGET [base]/Patient[id]": true,
				"Name = Jason Argonaut": true,
				"gender = male": true,
				"birthdate = 1978-12-11": true,
				"identifier = urn:oid:1.2.840.114350.1.13.0.1.7.5.737384.0|E3948": true,
				"identifer0 = urn:oid:1.2.840.114350.1.13.0.1.7.5.737384.0|E3948": true,
				"identifer1 = undefined|Z6073": true,
				"identifer2 = undefined|Ti5Vqh2hlXOtozNNgwIRe.Q7mNV1Vs4b090CS3.Frl54B": true,
				"identifer3 = undefined|eroCd17NbCffM3E3WXi7eOQ3": true,
				"identifer4 = undefined|     Z6073": true,
				"identifer5 = urn:oid:2.16.840.1.113883.4.1|undefined": true
			},
			"testPassFailCounts": {
				"Description:SHALL support fetching a Patient using the _id search parameter:\n\nGET [base]/Patient[id]": {
					"pass": 1,
					"fail": 0
				},
				"Name = Jason Argonaut": {
					"pass": 1,
					"fail": 0
				},
				"gender = male": {
					"pass": 1,
					"fail": 0
				},
				"birthdate = 1978-12-11": {
					"pass": 1,
					"fail": 0
				},
				"identifier = urn:oid:1.2.840.114350.1.13.0.1.7.5.737384.0|E3948": {
					"pass": 1,
					"fail": 0
				},
				"identifer0 = urn:oid:1.2.840.114350.1.13.0.1.7.5.737384.0|E3948": {
					"pass": 1,
					"fail": 0
				},
				"identifer1 = undefined|Z6073": {
					"pass": 1,
					"fail": 0
				},
				"identifer2 = undefined|Ti5Vqh2hlXOtozNNgwIRe.Q7mNV1Vs4b090CS3.Frl54B": {
					"pass": 1,
					"fail": 0
				},
				"identifer3 = undefined|eroCd17NbCffM3E3WXi7eOQ3": {
					"pass": 1,
					"fail": 0
				},
				"identifer4 = undefined|     Z6073": {
					"pass": 1,
					"fail": 0
				},
				"identifer5 = urn:oid:2.16.840.1.113883.4.1|undefined": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"142"
			],
			"allTests": [
				{
					"Description:SHALL support fetching a Patient using the _id search parameter:\n\nGET [base]/Patient[id]": true,
					"Name = Jason Argonaut": true,
					"gender = male": true,
					"birthdate = 1978-12-11": true,
					"identifier = urn:oid:1.2.840.114350.1.13.0.1.7.5.737384.0|E3948": true,
					"identifer0 = urn:oid:1.2.840.114350.1.13.0.1.7.5.737384.0|E3948": true,
					"identifer1 = undefined|Z6073": true,
					"identifer2 = undefined|Ti5Vqh2hlXOtozNNgwIRe.Q7mNV1Vs4b090CS3.Frl54B": true,
					"identifer3 = undefined|eroCd17NbCffM3E3WXi7eOQ3": true,
					"identifer4 = undefined|     Z6073": true,
					"identifer5 = urn:oid:2.16.840.1.113883.4.1|undefined": true
				}
			],
			"time": "142",
			"totalRequestTime": "142",
			"iterationResults": {}
		},
		{
			"name": "{{uri}}/Patient?_id={{patient}}",
			"id": "7cdfc42b-e11b-42d2-879d-3cbe65a17bf0",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?_id=eroCd17NbCffM3E3WXi7eOQ3",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Description:SHALL support fetching a Patient using the _id search parameter:\n\nGET [base]/Patient?_id=[id]": true,
				"response is okPatient": true,
				"Resource Type= Patient id = eroCd17NbCffM3E3WXi7eOQ3": true
			},
			"testPassFailCounts": {
				"Description:SHALL support fetching a Patient using the _id search parameter:\n\nGET [base]/Patient?_id=[id]": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 1,
					"fail": 0
				},
				"Resource Type= Patient id = eroCd17NbCffM3E3WXi7eOQ3": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"143"
			],
			"allTests": [
				{
					"Description:SHALL support fetching a Patient using the _id search parameter:\n\nGET [base]/Patient?_id=[id]": true,
					"response is okPatient": true,
					"Resource Type= Patient id = eroCd17NbCffM3E3WXi7eOQ3": true
				}
			],
			"time": "143",
			"totalRequestTime": "143",
			"iterationResults": {}
		},
		{
			"name": "{{uri}}/Patient?identifier={{identifier0}}",
			"id": "e920a51b-3016-416b-a0ed-e454659edb27",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?identifier=urn:oid:1.2.840.114350.1.13.0.1.7.5.737384.0|E3948",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Description:SHALL support searching a patient by an identifier such as a MPI using the identifier search parameter\n\nGET [base]/Patient?identifier={[system]}|[code]": true,
				"response is okPatient": true,
				"Resource Type= Patient id = eroCd17NbCffM3E3WXi7eOQ3": true
			},
			"testPassFailCounts": {
				"Description:SHALL support searching a patient by an identifier such as a MPI using the identifier search parameter\n\nGET [base]/Patient?identifier={[system]}|[code]": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 1,
					"fail": 0
				},
				"Resource Type= Patient id = eroCd17NbCffM3E3WXi7eOQ3": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"146"
			],
			"allTests": [
				{
					"Description:SHALL support searching a patient by an identifier such as a MPI using the identifier search parameter\n\nGET [base]/Patient?identifier={[system]}|[code]": true,
					"response is okPatient": true,
					"Resource Type= Patient id = eroCd17NbCffM3E3WXi7eOQ3": true
				}
			],
			"time": "146",
			"totalRequestTime": "146",
			"iterationResults": {}
		},
		{
			"name": "{{uri}}/Patient?name={{family}}",
			"id": "2c074e34-8735-4ad6-823e-470ea9acea67",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?name=Argonaut",
			"totalTime": 0,
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"tests": {
				"Description:SHALL support searching for a patient by a string match of any part of name using the name search parameter:\n\nGET [base]/Patient?name=[string]": true,
				"response is okPatient": false
			},
			"testPassFailCounts": {
				"Description:SHALL support searching for a patient by a string match of any part of name using the name search parameter:\n\nGET [base]/Patient?name=[string]": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				"96"
			],
			"allTests": [
				{
					"Description:SHALL support searching for a patient by a string match of any part of name using the name search parameter:\n\nGET [base]/Patient?name=[string]": true,
					"response is okPatient": false
				}
			],
			"time": "96",
			"totalRequestTime": "96",
			"iterationResults": {}
		},
		{
			"name": "{{uri}}/Patient?name={{family}}&birthdate={{birthdate}}",
			"id": "213a06b7-e543-401f-816e-fec4ca99097b",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?name=Argonaut&birthdate=1978-12-11",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Description:SHALL support searching using the combination of the birthdate and name search parameters:\n\nGET [base]/Patient?birthdate=[date]{&amp;birthdate=[date]&amp;...}&amp;name=[string]": true,
				"response is okPatient": true,
				"no Patient in bundle": false
			},
			"testPassFailCounts": {
				"Description:SHALL support searching using the combination of the birthdate and name search parameters:\n\nGET [base]/Patient?birthdate=[date]{&amp;birthdate=[date]&amp;...}&amp;name=[string]": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 1,
					"fail": 0
				},
				"no Patient in bundle": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				"119"
			],
			"allTests": [
				{
					"Description:SHALL support searching using the combination of the birthdate and name search parameters:\n\nGET [base]/Patient?birthdate=[date]{&amp;birthdate=[date]&amp;...}&amp;name=[string]": true,
					"response is okPatient": true,
					"no Patient in bundle": false
				}
			],
			"time": "119",
			"totalRequestTime": "119",
			"iterationResults": {}
		},
		{
			"name": "{{uri}}/Patient?name={{family}}&gender={{gender}}",
			"id": "ec9dc38c-c35e-4b0c-9b40-4b526612c7cc",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?name=Argonaut&gender=male",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Description:SHALL support searching using the combination of the gender and name search parameters:\n\nGET [base]/Patient?gender={[system]}|[code]&amp;name=[string]": true,
				"response is okPatient": true,
				"no Patient in bundle": false
			},
			"testPassFailCounts": {
				"Description:SHALL support searching using the combination of the gender and name search parameters:\n\nGET [base]/Patient?gender={[system]}|[code]&amp;name=[string]": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 1,
					"fail": 0
				},
				"no Patient in bundle": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				"109"
			],
			"allTests": [
				{
					"Description:SHALL support searching using the combination of the gender and name search parameters:\n\nGET [base]/Patient?gender={[system]}|[code]&amp;name=[string]": true,
					"response is okPatient": true,
					"no Patient in bundle": false
				}
			],
			"time": "109",
			"totalRequestTime": "109",
			"iterationResults": {}
		},
		{
			"name": "{{uri}}/Patient?family={{family}}&birthdate={{birthdate}}",
			"id": "093ce5aa-96c9-4805-a3a5-d45e063b758f",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?family=Argonaut&birthdate=1978-12-11",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Description:SHOULD support searching using the combination of the birthdate and family search parameters:\n\nGET [base]/Patient?birthdate=[date]&amp;family=[string]\n\n": true,
				"response is okPatient": true,
				"Resource Type= Patient id = eroCd17NbCffM3E3WXi7eOQ3": true
			},
			"testPassFailCounts": {
				"Description:SHOULD support searching using the combination of the birthdate and family search parameters:\n\nGET [base]/Patient?birthdate=[date]&amp;family=[string]\n\n": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 1,
					"fail": 0
				},
				"Resource Type= Patient id = eroCd17NbCffM3E3WXi7eOQ3": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				"148"
			],
			"allTests": [
				{
					"Description:SHOULD support searching using the combination of the birthdate and family search parameters:\n\nGET [base]/Patient?birthdate=[date]&amp;family=[string]\n\n": true,
					"response is okPatient": true,
					"Resource Type= Patient id = eroCd17NbCffM3E3WXi7eOQ3": true
				}
			],
			"time": "148",
			"totalRequestTime": "148",
			"iterationResults": {}
		},
		{
			"name": "{{uri}}/Patient?family={{family}}&gender={{gender}}",
			"id": "e8c60337-9013-431d-ac35-fcfcc8f6dab3",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?family=Argonaut&gender=male",
			"totalTime": 0,
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"tests": {
				"Description:SHOULD support searching using the combination of the family and gender search parameters:\n\nGET [base]/Patient?family=[string]&amp;gender={[system]}|[code]\n\n": true,
				"response is okPatient": true,
				"no Patient in bundle": false
			},
			"testPassFailCounts": {
				"Description:SHOULD support searching using the combination of the family and gender search parameters:\n\nGET [base]/Patient?family=[string]&amp;gender={[system]}|[code]\n\n": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 1,
					"fail": 0
				},
				"no Patient in bundle": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				"109"
			],
			"allTests": [
				{
					"Description:SHOULD support searching using the combination of the family and gender search parameters:\n\nGET [base]/Patient?family=[string]&amp;gender={[system]}|[code]\n\n": true,
					"response is okPatient": true,
					"no Patient in bundle": false
				}
			],
			"time": "109",
			"totalRequestTime": "109",
			"iterationResults": {}
		}
	],
	"totalPass": 27,
	"totalFail": 4,
	"totalTime": 1012,
	"lifecycle": "done",
	"requests": [
		{
			"name": "{{uri}}Patient/{{patient}}",
			"id": "871c82b0-2f37-4880-bcff-50546428574f",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4/Patient/eroCd17NbCffM3E3WXi7eOQ3",
			"time": "2019-06-19T15:20:24.589Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Description:SHALL support fetching a Patient using the _id search parameter:\n\nGET [base]/Patient[id]": {
					"pass": 1,
					"fail": 0
				},
				"Name = Jason Argonaut": {
					"pass": 1,
					"fail": 0
				},
				"gender = male": {
					"pass": 1,
					"fail": 0
				},
				"birthdate = 1978-12-11": {
					"pass": 1,
					"fail": 0
				},
				"identifier = urn:oid:1.2.840.114350.1.13.0.1.7.5.737384.0|E3948": {
					"pass": 1,
					"fail": 0
				},
				"identifer0 = urn:oid:1.2.840.114350.1.13.0.1.7.5.737384.0|E3948": {
					"pass": 1,
					"fail": 0
				},
				"identifer1 = undefined|Z6073": {
					"pass": 1,
					"fail": 0
				},
				"identifer2 = undefined|Ti5Vqh2hlXOtozNNgwIRe.Q7mNV1Vs4b090CS3.Frl54B": {
					"pass": 1,
					"fail": 0
				},
				"identifer3 = undefined|eroCd17NbCffM3E3WXi7eOQ3": {
					"pass": 1,
					"fail": 0
				},
				"identifer4 = undefined|     Z6073": {
					"pass": 1,
					"fail": 0
				},
				"identifer5 = urn:oid:2.16.840.1.113883.4.1|undefined": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "{{uri}}/Patient?_id={{patient}}",
			"id": "7cdfc42b-e11b-42d2-879d-3cbe65a17bf0",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?_id=eroCd17NbCffM3E3WXi7eOQ3",
			"time": "2019-06-19T15:20:24.589Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Description:SHALL support fetching a Patient using the _id search parameter:\n\nGET [base]/Patient?_id=[id]": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 1,
					"fail": 0
				},
				"Resource Type= Patient id = eroCd17NbCffM3E3WXi7eOQ3": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "{{uri}}/Patient?identifier={{identifier0}}",
			"id": "e920a51b-3016-416b-a0ed-e454659edb27",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?identifier=urn:oid:1.2.840.114350.1.13.0.1.7.5.737384.0|E3948",
			"time": "2019-06-19T15:20:24.589Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Description:SHALL support searching a patient by an identifier such as a MPI using the identifier search parameter\n\nGET [base]/Patient?identifier={[system]}|[code]": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 1,
					"fail": 0
				},
				"Resource Type= Patient id = eroCd17NbCffM3E3WXi7eOQ3": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "{{uri}}/Patient?name={{family}}",
			"id": "2c074e34-8735-4ad6-823e-470ea9acea67",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?name=Argonaut",
			"time": "2019-06-19T15:20:24.589Z",
			"responseCode": {
				"code": 400,
				"name": "Bad Request",
				"detail": {
					"name": "Bad Request",
					"detail": "The request cannot be fulfilled due to bad syntax."
				}
			},
			"testPassFailCounts": {
				"Description:SHALL support searching for a patient by a string match of any part of name using the name search parameter:\n\nGET [base]/Patient?name=[string]": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 0,
					"fail": 1
				}
			}
		},
		{
			"name": "{{uri}}/Patient?name={{family}}&birthdate={{birthdate}}",
			"id": "213a06b7-e543-401f-816e-fec4ca99097b",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?name=Argonaut&birthdate=1978-12-11",
			"time": "2019-06-19T15:20:24.589Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Description:SHALL support searching using the combination of the birthdate and name search parameters:\n\nGET [base]/Patient?birthdate=[date]{&amp;birthdate=[date]&amp;...}&amp;name=[string]": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 1,
					"fail": 0
				},
				"no Patient in bundle": {
					"pass": 0,
					"fail": 1
				}
			}
		},
		{
			"name": "{{uri}}/Patient?name={{family}}&gender={{gender}}",
			"id": "ec9dc38c-c35e-4b0c-9b40-4b526612c7cc",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?name=Argonaut&gender=male",
			"time": "2019-06-19T15:20:24.589Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Description:SHALL support searching using the combination of the gender and name search parameters:\n\nGET [base]/Patient?gender={[system]}|[code]&amp;name=[string]": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 1,
					"fail": 0
				},
				"no Patient in bundle": {
					"pass": 0,
					"fail": 1
				}
			}
		},
		{
			"name": "{{uri}}/Patient?family={{family}}&birthdate={{birthdate}}",
			"id": "093ce5aa-96c9-4805-a3a5-d45e063b758f",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?family=Argonaut&birthdate=1978-12-11",
			"time": "2019-06-19T15:20:24.589Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Description:SHOULD support searching using the combination of the birthdate and family search parameters:\n\nGET [base]/Patient?birthdate=[date]&amp;family=[string]\n\n": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 1,
					"fail": 0
				},
				"Resource Type= Patient id = eroCd17NbCffM3E3WXi7eOQ3": {
					"pass": 1,
					"fail": 0
				}
			}
		},
		{
			"name": "{{uri}}/Patient?family={{family}}&gender={{gender}}",
			"id": "e8c60337-9013-431d-ac35-fcfcc8f6dab3",
			"url": "https://connectathon.epic.com/Interconnect-Fhir-Unsecure/api/FHIR/R4//Patient?family=Argonaut&gender=male",
			"time": "2019-06-19T15:20:24.589Z",
			"responseCode": {
				"code": 200,
				"name": "OK",
				"detail": {
					"name": "OK",
					"detail": "Standard response for successful HTTP requests. The actual response will depend on the request method used. In a GET request, the response will contain an entity corresponding to the requested resource. In a POST request the response will contain an entity describing or containing the result of the action."
				}
			},
			"testPassFailCounts": {
				"Description:SHOULD support searching using the combination of the family and gender search parameters:\n\nGET [base]/Patient?family=[string]&amp;gender={[system]}|[code]\n\n": {
					"pass": 1,
					"fail": 0
				},
				"response is okPatient": {
					"pass": 1,
					"fail": 0
				},
				"no Patient in bundle": {
					"pass": 0,
					"fail": 1
				}
			}
		}
	],
	"synced": false
}